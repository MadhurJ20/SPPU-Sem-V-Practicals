/*
Madhur Jaripatke
Roll No. 55
TE A Computer
RMDSSOE, Warje, Pune
*/

/*
MongoDB â€“ Aggregation and Indexing:
Design and Develop MongoDB Queries using aggregation and indexing with suitable example
using MongoDB.
*/

test> use Orders;
switched to db Orders
Orders> db.Orders.insert({cust_id:A123, product:P1, price:540, status:"A"});
ReferenceError: A123 is not defined
Orders> db.createCollection("Orders");
{ ok: 1 }
Orders> db.Orders.insert({cust_id:A123, product:P1, price:540, status:"A"});
ReferenceError: A123 is not defined
Orders> db.Orders.insert({cust_id:"A123", product:P1, price:540, status:"A"});
ReferenceError: P1 is not defined
Orders> db.Orders.insert({cust_id:"A123", product:"P1", price:540, status:"A"});
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("652e1bc639deedfd3c395479") }
}
Orders> db.Orders.find();
[
  {
    _id: ObjectId("652e1bc639deedfd3c395479"),
    cust_id: 'A123',
    product: 'P1',
    price: 540,
    status: 'A'
  }
]
Orders> db.Orders.insert({cust_id:"A123", product:"P2", price:430, status:"A"});
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("652e1c5239deedfd3c39547a") }
}
Orders> db.Orders.insert({cust_id:"A123", product:"P3", price:400, status:"D"});
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("652e1c5239deedfd3c39547b") }
}
Orders> db.Orders.insert({cust_id:"B212", product:"P1", price:540, status:"A"});
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("652e1c5239deedfd3c39547c") }
}
Orders> db.Orders.insert({cust_id:"B212", product:"P4", price:500, status:"D"});
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("652e1c5239deedfd3c39547d") }
}
Orders> db.Orders.insert({cust_id:"C212", product:"P2", price:400, status:"A"});
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("652e1c5439deedfd3c39547e") }
}
Orders> db.Orders.find();
[
  {
    _id: ObjectId("652e1bc639deedfd3c395479"),
    cust_id: 'A123',
    product: 'P1',
    price: 540,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547a"),
    cust_id: 'A123',
    product: 'P2',
    price: 430,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547b"),
    cust_id: 'A123',
    product: 'P3',
    price: 400,
    status: 'D'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547c"),
    cust_id: 'B212',
    product: 'P1',
    price: 540,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547d"),
    cust_id: 'B212',
    product: 'P4',
    price: 500,
    status: 'D'
  },
  {
    _id: ObjectId("652e1c5439deedfd3c39547e"),
    cust_id: 'C212',
    product: 'P2',
    price: 400,
    status: 'A'
  }
]
Orders> db.Orders.aggegate([{$count:"Total No. of Documents"}]);
TypeError: db.Orders.aggegate is not a function
Orders> db.Orders.aggregate([{$count:"Total No. of Documents"}]);
MongoServerError: the count field cannot contain '.'
Orders> db.Orders.aggregate([{$count:"Total No of Documents"}]);
[ { 'Total No of Documents': 6 } ]
Orders> db.Orders.aggregate([{$match:{status:"A"}}]);
[
  {
    _id: ObjectId("652e1bc639deedfd3c395479"),
    cust_id: 'A123',
    product: 'P1',
    price: 540,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547a"),
    cust_id: 'A123',
    product: 'P2',
    price: 430,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547c"),
    cust_id: 'B212',
    product: 'P1',
    price: 540,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5439deedfd3c39547e"),
    cust_id: 'C212',
    product: 'P2',
    price: 400,
    status: 'A'
  }
]
Orders> db.Orders.aggregate([{$project:{_id:NULL, product:1, price:1}}]);
ReferenceError: NULL is not defined
Orders> db.Orders.aggregate([{$project:{_id:null, product:1, price:1}}]);
[
  { _id: null, product: 'P1', price: 540 },
  { _id: null, product: 'P2', price: 430 },
  { _id: null, product: 'P3', price: 400 },
  { _id: null, product: 'P1', price: 540 },
  { _id: null, product: 'P4', price: 500 },
  { _id: null, product: 'P2', price: 400 }
]
Orders> db.Orders.aggregate([{$project:{_id:0, product:1, price:1}}]);
[
  { product: 'P1', price: 540 },
  { product: 'P2', price: 430 },
  { product: 'P3', price: 400 },
  { product: 'P1', price: 540 },
  { product: 'P4', price: 500 },
  { product: 'P2', price: 400 }
]
Orders> db.Orders.aggregate([{$sort:{price:1}}]);
[
  {
    _id: ObjectId("652e1c5239deedfd3c39547b"),
    cust_id: 'A123',
    product: 'P3',
    price: 400,
    status: 'D'
  },
  {
    _id: ObjectId("652e1c5439deedfd3c39547e"),
    cust_id: 'C212',
    product: 'P2',
    price: 400,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547a"),
    cust_id: 'A123',
    product: 'P2',
    price: 430,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547d"),
    cust_id: 'B212',
    product: 'P4',
    price: 500,
    status: 'D'
  },
  {
    _id: ObjectId("652e1bc639deedfd3c395479"),
    cust_id: 'A123',
    product: 'P1',
    price: 540,
    status: 'A'
  },
  {
    _id: ObjectId("652e1c5239deedfd3c39547c"),
    cust_id: 'B212',
    product: 'P1',
    price: 540,
    status: 'A'
  }
]
Orders> db.Orders.aggregate([{$match:{status:"A"}},{$project:{product:1,_id:0}}]);
[
  { product: 'P1' },
  { product: 'P2' },
  { product: 'P1' },
  { product: 'P2' }
]
Orders> db.Orders.aggregate([{$sort:{price:-1}},{$limit:1}]);
[
  {
    _id: ObjectId("652e1bc639deedfd3c395479"),
    cust_id: 'A123',
    product: 'P1',
    price: 540,
    status: 'A'
  }
]